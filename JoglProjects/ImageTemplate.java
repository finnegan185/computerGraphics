/*
 * File:	ImageTemplate.java
 * Author:	Zack Finnegan + jrobertson1
 * Date:	3/26/2020
 * Purpose:	This class holds the images that will be display by the Panel class that
 * 			was poorly named. It holds "ZACK!". In addition the method in this class
 * 			provides the color to the objects.
 */
package computerGraphics;

import java.awt.Color;
import java.awt.image.BufferedImage;


public class ImageTemplate {
    // Constants
    // X Size of Images
    private final static int IMGSIZEX = 20;
    // Y Size of Images
    private final static int IMGSIZEY = 20;
    
    // Define a Simple Images based on the Alphabet
    // Use static so can send them into the getImage() method remotely
    // These are 20x20 
   public static int[][] letterZ = {
	   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2},
	   {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2},
	   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,0},
	   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,0,0},
	   {0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,0,0,0},
	   {0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,0,0,0,0},
	   {0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,0,0,0,0,0},
	   {0,0,0,0,0,0,0,0,0,0,1,1,1,2,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,0,0,1,1,1,2,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
	   {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
	   {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0}};
   
   public static int[][] letterA = {
	   {0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,0,0,1,1,2,0,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,0,1,1,1,1,2,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,1,1,0,0,1,1,2,0,0,0,0,0,0},
	   {0,0,0,0,0,0,1,1,2,0,0,0,1,1,0,0,0,0,0,0},
	   {0,0,0,0,0,0,1,1,0,0,0,0,1,1,2,0,0,0,0,0},
	   {0,0,0,0,0,1,1,2,0,0,0,0,0,1,1,0,0,0,0,0},
	   {0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,2,0,0,0,0},
	   {0,0,0,0,1,1,2,0,0,0,0,0,0,0,1,1,0,0,0,0},
	   {0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0},
	   {0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
	   {0,0,0,1,1,2,0,0,0,0,0,0,0,0,0,1,1,2,0,0},
	   {0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0},
	   {0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,0},
	   {0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
	   {0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},
	   {1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
	   {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
	   {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1}};
   
   public static int[][] letterC = {
	   {0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,0,0,0,0,0},
	   {0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0},
	   {0,0,0,1,1,1,1,1,2,0,0,1,1,1,1,1,2,0,0,0},
	   {0,0,1,1,1,1,2,0,0,0,0,0,0,1,1,1,1,2,0,0},
	   {0,0,1,1,1,2,0,0,0,0,0,0,0,0,1,1,1,1,2,0},
	   {0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2},
	   {0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2},
	   {0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2},
	   {0,0,1,1,1,2,0,0,0,0,0,0,0,0,1,1,1,1,2,0},
	   {0,0,1,1,1,1,2,0,0,0,0,0,0,1,1,1,1,2,0,0},
	   {0,0,0,1,1,1,1,1,2,0,0,1,1,1,1,1,2,0,0,0},
	   {0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0},
	   {0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,0,0,0,0,0},
	   {0,0,0,0,0,0,0,1,1,1,1,1,2,0,0,0,0,0,0,0}};
   
   public static int[][] letterK = {
	   {0,0,0,1,1,2,0,0,0,0,0,0,0,1,1,1,2,0,0,0},
	   {0,0,0,1,1,2,0,0,0,0,0,0,1,1,1,2,0,0,0,0},
	   {0,0,0,1,1,2,0,0,0,0,0,1,1,1,2,0,0,0,0,0},
	   {0,0,0,1,1,2,0,0,0,0,1,1,1,2,0,0,0,0,0,0},
	   {0,0,0,1,1,2,0,0,0,1,1,1,2,0,0,0,0,0,0,0},
	   {0,0,0,1,1,2,0,0,1,1,1,2,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,2,0,1,1,1,2,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,2,1,1,1,2,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,2,1,1,1,2,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,2,0,1,1,1,2,0,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,2,0,0,1,1,1,2,0,0,0,0,0,0,0,0},
	   {0,0,0,1,1,2,0,0,0,1,1,1,2,0,0,0,0,0,0,0},
	   {0,0,0,1,1,2,0,0,0,0,1,1,1,2,0,0,0,0,0,0},
	   {0,0,0,1,1,2,0,0,0,0,0,1,1,1,2,0,0,0,0,0},
	   {0,0,0,1,1,2,0,0,0,0,0,0,1,1,1,2,0,0,0,0},
	   {0,0,0,1,1,2,0,0,0,0,0,0,0,1,1,1,2,0,0,0}};
 
   public static int[][] exclamation = {
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	   {1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};

    // Methods to apply pixel colors and
    public BufferedImage getImage(int[][] data) {
        BufferedImage image = new BufferedImage(IMGSIZEX, IMGSIZEY,
                BufferedImage.TYPE_INT_RGB);
        for (int x = 0; x < IMGSIZEX; x++) {
            for (int y = 0; y < IMGSIZEY; y++) {
                int pixelColor = data[x][y];
                // Set Colors based on Binary Image value
                if (pixelColor == 0) {
                    pixelColor = Color.WHITE.getRGB();
                } else if (pixelColor == 1) {
                    pixelColor = Color.BLACK.getRGB();
                } else {
                	pixelColor = Color.DARK_GRAY.getRGB();
                }
                image.setRGB(x, y, pixelColor);
            } 
        } 
        return image;
    } 

    

}
